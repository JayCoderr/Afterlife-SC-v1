using _clientids;
using MelonLoader;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using static UnityEngine.ImageConversion;
using Il2CppScheduleOne.PlayerScripts;
using Il2CppScheduleOne.PlayerScripts.Health;
using static _afterlifeMod._functions;
using static _afterlifeMod._functions.UnlimitedAmmoPatch;
using _afterlifeMod;
using static _afterlifeMod._clientids;
using static _clientids._advanceUnityEngineForgeMode;
using static _afterlifeMod._afterlifeMod;
using Il2CppScheduleOne.UI;
using System.Reflection;
using static _clientids._menuStructure;
using Il2CppScheduleOne;
using Console = Il2CppScheduleOne.Console;
using Il2CppScheduleOne.GameTime;
using Il2CppScheduleOne.DevUtilities;
using Il2CppScheduleOne.Skating;
using static _afterlifeAssetLoader._afterlifeBundleLoader;
using System.Runtime.CompilerServices;
using Il2CppScheduleOne.Money;
using static _afterlifeMod._functions.CustomFogController;
using static _afterlifeMod._functions.CustomContrastController;
using static _afterlifeMod._functions.CustomBlurController;
using static _afterlifeScModMenu._globalVariables;
using static Il2CppScheduleOne.PlayerScripts.Player;
using static Il2CppScheduleOne.PlayerScripts.PlayerMovement;
using static _afterlifeMod.PoliceESPController;
using static _afterlifeMod.MenuElement;
using static UnityEngine.GameObject;
using static _afterlifeScModMenu.AfterlifeUnityMapFunctions;
using static _afterlifeScModMenu._mainMenu;
using static _afterlifeScModMenu.AfterlifeConsoleMsg;

namespace _clientids
{
    public static class _menuStructure
    {
        public static Dictionary<string, List<MenuElement>> menuMap = new Dictionary<string, List<MenuElement>>
        {
            [$"{menunameX}"] = new List<MenuElement>
            {
                new MenuOption("Main Mods", () => CreateSubMenu("Main Mods", 51)),
                new MenuOption("Npc Menu", () => CreateSubMenu("Npc Menu", 106)),
                new MenuOption("Vehicles Menu", () => CreateSubMenu("Vehicles Menu", 7)),
                new MenuOption("Give Items", () => CreateSubMenu("Give Items", 144)),
                new MenuOption("Lobby Menu", () => CreateSubMenu("Lobby Menu", 20)),
                new MenuOption("UI Menu", () => CreateSubMenu("UI Menu", 19)),
                new MenuOption("Teleport Menu", () => CreateSubMenu("Teleport Menu", 43)),
                new MenuOption("Avatar Menu", () => CreateSubMenu("Avatar Menu", 14)),
                new MenuOption("Gamemodes Menu", () => CreateSubMenu("Gamemodes Menu", 5)),
                new MenuOption("Clone Menu", () => CreateSubMenu("Clone Menu", 5)),
                new MenuOption("Message Menu", () => CreateSubMenu("Message Menu", 21)),
                new MenuOption("Weapon Mods", () => CreateSubMenu("Weapon Mods", 7)),
                new MenuOption("Power Ups", () => CreateSubMenu("Power Ups", 9)),
                new MenuOption("Perks", () => CreateSubMenu("Perks", 5)),
                new MenuOption("Forge Menu", () => CreateSubMenu("Forge Menu", 7)),
                new MenuOption("Vision Menu", () => CreateSubMenu("Vision Menu", 13)),
                new MenuOption("Sounds Menu", () => CreateSubMenu("Sounds Menu", null)),
                new MenuOption("Menu Editor", () => CreateSubMenu("Menu Editor", 5)),
                new MenuOption("Players Menu", () => CreateSubMenu("Players Menu", 3)),
                new MenuOption("Profile Menu", () => CreateSubMenu("Profile Menu", 3)),
                new MenuTextBox("Submenu Name", "", val => CreateSubMenu(val.ToString(), menuMap.ContainsKey(val.ToString()) ? menuMap[val.ToString()].Count : 0)),
                new MenuOption("Loaded Prefabs", val => CreateSubMenu("Loaded Prefabs", menuStructure.ContainsKey("Loaded Prefabs") ? menuStructure["Loaded Prefabs"].Count : 0)),
            },
            ["Main Mods"] = new List<MenuElement>
            {
                new MenuOption("God Mode", () => ToggleGodMode()),
                new MenuOption("Demi God", () => ToggleDemiGodMode()),
                new MenuOption("Modify Cash", () => CreateSubMenu("Modify Cash", null)),
                new MenuOption("Noclip", () => FlyMode()),
                new MenuOption("Thirdperson", () => ToggleThirdPersonCamera()),
                new MenuOption("Clear Wanted lvl", ClearWantedLevel),
                new MenuOption("Toggle Crosshair", () => Singleton<HUD>.Instance.SetCrosshairVisible(isCrosshairVisible = !isCrosshairVisible)),
                new MenuOption("Pro-mod", () => PlayerSingleton<PlayerCamera>.Instance.OverrideFOV(PlayerSingleton<PlayerCamera>.Instance.Camera.fieldOfView == 120f ? 60f : 120f, 0.5f)),
                new MenuTextBox("Set World Time", "", input => { var text = input?.ToString() ?? ""; if (int.TryParse(text, out var time)) SetWorldTime(time);}),//SetTimeScale
                new MenuTextBox("Set Time Scale", "", input => { var text = input?.ToString() ?? ""; if (int.TryParse(text, out var time)) SetWorldTimeScale(time);}),
                new MenuOption("Wallhack", () => SetCameraMod("wallhack")),//could just turn building off on clientside when within a certain distance of a collider
                new MenuOption("Toggle Visibility", () => InvisibleToggle(isInvisible = !isInvisible)),
                new MenuOption("Police Aimbot Toggle", ToggleRotateToPoliceNPC),
                new MenuOption("Toggle Police ESP", () => ToggleESP()),
                new MenuOption("Unlimited Ammo", () => ToggleUnlimitedAmmo()),
                new MenuOption("Leftside arm", () => ToggleGreyscale(-50)),
                new MenuOption("Human Torch", () => TestMsg("test 13")),
                new MenuOption("Human Fountain", () => TestMsg("test 14")),
                new MenuOption("Rotate Camera", ToggleCameraRotation),
                new MenuOption("Auto teabag", () => AutoTeaBagMode()),
                new MenuOption("Drunk mode", () => ToggleDrunkCamera(60f, 2.5f)),
                new MenuOption("Double Jump", () => JumpMultiplier = JumpMultiplier == 1 ? 2 : 1),
                new MenuOption("Gore mode", () => TestMsg("test 19")),
                new MenuOption("Desolidify Walls", () => AutoDeleteNearbyCollidersToggle()),
                new MenuTextBox("Hair Style Path", "", (val) => SetAppearanceProperty("hairstyle", $"{val}")),
                new MenuOption("Kamikaze trucks", () => KamikizeRocks("SUV")),
                new MenuOption("Show x,y,z", () => PrintCoords()),
                new MenuOption("Bouncepad", () => BouncePadSpawner("LEDLight")),
                new MenuOption("Freeze Self", () => PlayerMovement.Instance.canMove = !PlayerMovement.Instance.canMove),
                new MenuOption("NPC Forcefield", () => PlayerMovement.Instance.crouchSpeedMultipler = 999),
                new MenuOption("Toggle Money Gun", () => MoneyGun = !MoneyGun),
                new MenuOption("Matrix Mode", () => TestMsg("test 24")),
                new MenuTextBox("Type Fov", "", val => { if (float.TryParse(val as string, out var f)) PlayerSingleton<PlayerCamera>.Instance.OverrideFOV(f, 0.5f); }),
                new MenuOption("Pass Out", () => { PlayerPassout = !PlayerPassout; if (PlayerPassout) Local.PassOut(); else Local.PassOutRecovery(); }),
                new MenuOption("Invert Controls", () => Local.Disoriented = !Local.Disoriented),
                new MenuOption("Fake flyMode", () => Local.Crouched = !Local.Crouched),
                new MenuOption("Schizo Mode", () => Local._Schizophrenic_k__BackingField = !Local._Schizophrenic_k__BackingField),
                new MenuOption("Slippery Floor", () => Local._Slippery_k__BackingField = !Local._Slippery_k__BackingField),
                new MenuOption("Seizure", () => Local._Seizure_k__BackingField = !Local._Seizure_k__BackingField),
                new MenuOption("Suicide", () => Local.OnDied()),
                new MenuOption("Arrest Yourself", () => Local.Arrest()),
                new MenuOption("Dismount Skate-board", () => Local.DismountSkateboard()),
                new MenuTextBox("Type Testname", "", (val) => Local.PlayerName = $"{val}"),
                new MenuOption("Spawn Tut map", () => TutObjectSpawner("Tutorial","Map")),
                new MenuOption("Rick Sanchez Gif", () => Create3dGui("Rick", "", "https://iili.io/30LlTru.png")),
                new MenuOption("Nelson With gui", () => SpawnScheduleINpcWithGui("UncleNelson", "Hello MF Press E To Skybase", "https://iili.io/3aatyAu.png")),
                new MenuOption("Spawn Portal", () => CreateRickPortal("Portal", "", "https://iili.io/30i7nPj.png")),
                new MenuTextBox("Type Skate Jumpforce", "", (val) => SetSkateboardJumpForce(val)),
                new MenuOption("Skate SuperJump", SkateboardSuperJump),
                new MenuTextBox("Type Skate Speed", "", (val) => SetSkateboardPushForce(val)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Modify Cash"] = new List<MenuElement>
            {
                new MenuOption("Back", () => CreateSubMenu(menuName, 22)),
                new MenuTextBox("Type cashAmount", "", (val) => SpawnVehicle($"{val}".ToLowerInvariant()))
            },
            ["Npc Menu"] = new List<MenuElement>
            {
                new MenuTextBox("Type npcName", "", (val) => SpawnScheduleINpc($"{val}".Replace(" ", ""))),
                new MenuOption("Spawn Officer Jackson", () => SpawnScheduleINpc("OfficerJackson")),
                new MenuOption("Spawn Officer Green", () => SpawnScheduleINpc("OfficerGreen")),
                new MenuOption("Spawn Officer Murphy", () => SpawnScheduleINpc("OfficerMurphy")),
                new MenuOption("Spawn Officer Howard", () => SpawnScheduleINpc("OfficerHoward")),
                new MenuOption("Spawn Officer Lopez", () => SpawnScheduleINpc("OfficerLopez")),
                new MenuOption("Spawn Officer Davis", () => SpawnScheduleINpc("OfficerDavis")),
                new MenuOption("Spawn Officer Bailey", () => SpawnScheduleINpc("OfficerBailey")),
                new MenuOption("Spawn Officer Lee", () => SpawnScheduleINpc("OfficerLee")),
                new MenuOption("Spawn Officer Sanchez", () => SpawnScheduleINpc("OfficerSanchez")),
                new MenuOption("Spawn Officer Cooper", () => SpawnScheduleINpc("OfficerCooper")),
                new MenuOption("Spawn Officer Leo", () => SpawnScheduleINpc("OfficerLeo")),
                new MenuOption("Spawn Kyle", () => SpawnScheduleINpc("Kyle")),
                new MenuOption("Spawn Uncle Nelson", () => SpawnScheduleINpc("UncleNelson")),
                new MenuOption("Spawn Kathy", () => SpawnScheduleINpc("Kathy")),
                new MenuOption("Spawn Anna", () => SpawnScheduleINpc("Anna")),
                new MenuOption("Spawn Frank", () => SpawnScheduleINpc("Frank")),
                new MenuOption("Spawn Jessi", () => SpawnScheduleINpc("Jessi")),
                new MenuOption("Spawn Billy", () => SpawnScheduleINpc("Billy")),
                new MenuOption("Spawn Igor", () => SpawnScheduleINpc("Igor")),
                new MenuOption("Spawn Molly", () => SpawnScheduleINpc("Molly")),
                new MenuOption("Spawn Chelsey", () => SpawnScheduleINpc("Chelsey")),
                new MenuOption("Spawn Alison", () => SpawnScheduleINpc("Alison")),
                new MenuOption("Spawn Joe", () => SpawnScheduleINpc("Joe")),
                new MenuOption("Spawn Thomas", () => SpawnScheduleINpc("Thomas")),
                new MenuOption("Spawn Carl", () => SpawnScheduleINpc("Carl")),
                new MenuOption("Spawn Pam", () => SpawnScheduleINpc("Pam")),
                new MenuOption("Spawn Jacob", () => SpawnScheduleINpc("Jacob")),
                new MenuOption("Spawn Keith", () => SpawnScheduleINpc("Keith")),
                new MenuOption("Spawn Pearl", () => SpawnScheduleINpc("Pearl")),
                new MenuOption("Spawn Chemist", () => SpawnScheduleINpc("Chemist")),
                new MenuOption("Spawn Austin", () => SpawnScheduleINpc("Austin")),
                new MenuOption("Spawn Doug", () => SpawnScheduleINpc("Doug")),
                new MenuOption("Spawn Greg", () => SpawnScheduleINpc("Greg")),
                new MenuOption("Spawn Wei", () => SpawnScheduleINpc("Wei")),
                new MenuOption("Spawn Tobias", () => SpawnScheduleINpc("Tobias")),
                new MenuOption("Spawn Shirley", () => SpawnScheduleINpc("Shirley")),
                new MenuOption("Spawn Jack", () => SpawnScheduleINpc("Jack")),
                new MenuOption("Spawn Geraldine", () => SpawnScheduleINpc("Geraldine")),
                new MenuOption("Spawn Jerry", () => SpawnScheduleINpc("Jerry")),
                new MenuOption("Spawn Trent", () => SpawnScheduleINpc("Trent")),
                new MenuOption("Spawn Genghis", () => SpawnScheduleINpc("Genghis")),
                new MenuOption("Spawn Brad", () => SpawnScheduleINpc("Brad")),
                new MenuOption("Spawn CivilianNPC", () => SpawnScheduleINpc("CivlianNPC")),
                new MenuOption("Spawn Harold", () => SpawnScheduleINpc("Harold")),
                new MenuOption("Spawn Frank", () => SpawnScheduleINpc("Frank")),
                new MenuOption("Spawn Donna", () => SpawnScheduleINpc("Donna")),
                new MenuOption("Spawn Charles", () => SpawnScheduleINpc("Charles")),
                new MenuOption("Spawn Beth", () => SpawnScheduleINpc("Beth")),
                new MenuOption("Spawn Lisa", () => SpawnScheduleINpc("Lisa")),
                new MenuOption("Spawn Lily", () => SpawnScheduleINpc("Lily")),
                new MenuOption("Spawn Javier", () => SpawnScheduleINpc("Javier")),
                new MenuOption("Spawn Chloe", () => SpawnScheduleINpc("Chloe")),
                new MenuOption("Spawn George", () => SpawnScheduleINpc("George")),
                new MenuOption("Spawn Peter", () => SpawnScheduleINpc("Peter")),
                new MenuOption("Spawn Ludwig", () => SpawnScheduleINpc("Ludwig")),
                new MenuOption("Spawn Dan", () => SpawnScheduleINpc("Dan")),
                new MenuOption("Spawn Kyle", () => SpawnScheduleINpc("Kyle")),
                new MenuOption("Spawn Louis", () => SpawnScheduleINpc("Louis")),
                new MenuOption("Spawn Player", () => SpawnScheduleINpc("Player")),
                new MenuOption("Spawn Jeremy", () => SpawnScheduleINpc("Jeremy")),
                new MenuOption("Spawn Melissa", () => SpawnScheduleINpc("Melissa")),
                new MenuOption("Spawn SchizoGoblin", () => SpawnScheduleINpc("SchizoGoblin")),
                new MenuOption("Spawn Sam", () => SpawnScheduleINpc("Sam")),
                new MenuOption("Spawn Micheal", () => SpawnScheduleINpc("Micheal")),
                new MenuOption("Spawn Doris", () => SpawnScheduleINpc("Doris")),
                new MenuOption("Spawn Benji", () => SpawnScheduleINpc("Benji")),
                new MenuOption("Spawn Lucy", () => SpawnScheduleINpc("Lucy")),
                new MenuOption("Spawn Jackie", () => SpawnScheduleINpc("Jackie")),
                new MenuOption("Spawn Kim", () => SpawnScheduleINpc("Kim")),
                new MenuOption("Spawn Randy", () => SpawnScheduleINpc("Randy")),
                new MenuOption("Spawn Elizabeth", () => SpawnScheduleINpc("Elizabeth")),
                new MenuOption("Spawn Billy", () => SpawnScheduleINpc("Billy")),
                new MenuOption("Spawn Eugene", () => SpawnScheduleINpc("Eugene")),
                new MenuOption("Spawn Peggy", () => SpawnScheduleINpc("Peggy")),
                new MenuOption("Spawn Fiona", () => SpawnScheduleINpc("Fiona")),
                new MenuOption("Spawn Mick", () => SpawnScheduleINpc("Mick")),
                new MenuOption("Spawn Hank", () => SpawnScheduleINpc("Hank")),
                new MenuOption("Spawn Karen", () => SpawnScheduleINpc("Karen")),
                new MenuOption("Spawn Joyce", () => SpawnScheduleINpc("Joyce")),
                new MenuOption("Spawn Ming", () => SpawnScheduleINpc("Ming")),
                new MenuOption("Spawn Walter", () => SpawnScheduleINpc("Walter")),
                new MenuOption("Spawn Dean", () => SpawnScheduleINpc("Dean")),
                new MenuOption("Spawn Jennifer", () => SpawnScheduleINpc("Jennifer")),
                new MenuOption("Spawn Oscar", () => SpawnScheduleINpc("Oscar")),
                new MenuOption("Spawn Micheal", () => SpawnScheduleINpc("Micheal")),
                new MenuOption("Spawn Ray", () => SpawnScheduleINpc("Ray")),
                new MenuOption("Spawn Kevin", () => SpawnScheduleINpc("Kevin")),
                new MenuOption("Spawn Leo", () => SpawnScheduleINpc("Leo")),
                new MenuOption("Spawn Jen", () => SpawnScheduleINpc("Jen")),
                new MenuOption("Spawn Salvador", () => SpawnScheduleINpc("Salvador")),
                new MenuOption("Spawn Philip", () => SpawnScheduleINpc("Philip")),
                new MenuOption("Spawn Chris", () => SpawnScheduleINpc("Chris")),
                new MenuOption("Spawn Marco", () => SpawnScheduleINpc("Marco")),
                new MenuOption("Spawn Dennis", () => SpawnScheduleINpc("Dennis")),
                new MenuOption("Spawn Dealer", () => SpawnScheduleINpc("Dealer")),
                new MenuOption("Spawn Meg", () => SpawnScheduleINpc("Meg")),
                new MenuOption("Spawn Botanist", () => SpawnScheduleINpc("Botanist")),
                new MenuOption("Spawn Jane", () => SpawnScheduleINpc("Jane")),
                new MenuOption("Spawn Stan", () => SpawnScheduleINpc("Stan")),
                new MenuOption("Spawn Mac", () => SpawnScheduleINpc("Mac")),
                new MenuOption("Spawn Andy", () => SpawnScheduleINpc("Andy")),
                new MenuOption("Spawn Jeff", () => SpawnScheduleINpc("Jeff")),
                new MenuOption("Spawn Albert", () => SpawnScheduleINpc("Albert")),
                new MenuOption("Spawn Herbert", () => SpawnScheduleINpc("Herbert")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Vehicles Menu"] = new List<MenuElement>
            {
                new MenuTextBox("Type vehicleName", "", (val) => SpawnVehicle($"{val}".ToLowerInvariant())),
                new MenuOption("Spawn Shitbox", () => SpawnVehicle("hounddog")),
                new MenuOption("Spawn Veeper", () => SpawnVehicle("veeper")),
                new MenuOption("Spawn Bruiser", () => SpawnVehicle("bruiser")),
                new MenuOption("Spawn Hounddog", () => SpawnVehicle("hounddog")),
                new MenuOption("Spawn Cheetah", () => SpawnVehicle("cheetah")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Give Items"] = new List<MenuElement>
            {
                new MenuTextBox("type itemName", "", (val) => GiveItemToPlayer($"{val}".ToLowerInvariant(), 1)),
                new MenuOption("Cocaine", () => GiveItemToPlayer("cocaine", 1)),
                new MenuOption("Cash", () => CashDrop()),
                new MenuOption("test Cash", () => DropCashAtLookPosition(_findAfterlifeGameObj("10$ Pickup")?.GetComponent<Il2CppScheduleOne.ItemFramework.CashPickup>())),
                new MenuOption("Acid", () => GiveItemToPlayer("acid", 1)),
                new MenuOption("Addy", () => GiveItemToPlayer("addy", 1)),
                new MenuOption("Air pot", () => GiveItemToPlayer("airpot", 1)),
                new MenuOption("Apron", () => GiveItemToPlayer("apron", 1)),
                new MenuOption("Baby Blue", () => GiveItemToPlayer("babyblue", 1)),
                new MenuOption("Baggie", () => GiveItemToPlayer("baggie", 1)),
                new MenuOption("Banana", () => GiveItemToPlayer("banana", 1)),
                new MenuOption("Baseball Bat", () => GiveItemToPlayer("baseballbat", 1)),
                new MenuOption("Battery", () => GiveItemToPlayer("battery", 1)),
                new MenuOption("bed", () => GiveItemToPlayer("bed", 1)),
                new MenuOption("belt", () => GiveItemToPlayer("belt", 1)),
                new MenuOption("Big sprinkler", () => GiveItemToPlayer("bigsprinkler", 1)),
                new MenuOption("Biker Crank (Lquid)", () => GiveItemToPlayer("liquidbikercrank", 1)),
                new MenuOption("Biker Crank", () => GiveItemToPlayer("bikercrank", 1)),
                new MenuOption("Blazer", () => GiveItemToPlayer("blazer", 1)),
                new MenuOption("Brick Press", () => GiveItemToPlayer("brickpress", 1)),
                new MenuOption("Brick", () => GiveItemToPlayer("brick", 1)),
                new MenuOption("Bucket Hat", () => GiveItemToPlayer("buckethat", 1)),
                new MenuOption("Buttonup shirt (rolled)", () => GiveItemToPlayer("rolledbuttonup", 1)),
                new MenuOption("Buttonup shirt", () => GiveItemToPlayer("buttonup", 1)),
                new MenuOption("Cap", () => GiveItemToPlayer("Cap", 1)),
                new MenuOption("Cargo Pants", () => GiveItemToPlayer("cargopants", 1)),
                new MenuOption("Cauldron", () => GiveItemToPlayer("cauldron", 1)),
                new MenuOption("Chateau La Peepee", () => GiveItemToPlayer("chateaulapeepee", 1)),
                new MenuOption("Cheap Skateboard", () => GiveItemToPlayer("cheapskateboard", 1)),
                new MenuOption("Chef Hat", () => GiveItemToPlayer("chefthat", 1)),
                new MenuOption("Chemistry Station", () => GiveItemToPlayer("chemistrystation", 1)),
                new MenuOption("Chili", () => GiveItemToPlayer("chili", 1)),
                new MenuOption("Coca Leaf", () => GiveItemToPlayer("cocaleaf", 1)),
                new MenuOption("Coca Seed", () => GiveItemToPlayer("cocaseed", 1)),
                new MenuOption("Cocraine Base", () => GiveItemToPlayer("cocainebase", 1)),
                new MenuOption("Coffee Table", () => GiveItemToPlayer("coffeetable", 1)),
                new MenuOption("Collar Jacket", () => GiveItemToPlayer("collarjacket", 1)),
                new MenuOption("Combat Boots", () => GiveItemToPlayer("combatboots", 1)),
                new MenuOption("Cowboy Hat", () => GiveItemToPlayer("cowboyhat", 1)),
                new MenuOption("Cruiser", () => GiveItemToPlayer("cruiser", 1)),
                new MenuOption("Default Weed", () => GiveItemToPlayer("defaultweed", 1)),
                new MenuOption("Donut", () => GiveItemToPlayer("donut", 1)),
                new MenuOption("Dress Shoes", () => GiveItemToPlayer("dressshoes", 1)),
                new MenuOption("Drying Rack", () => GiveItemToPlayer("dryingrack", 1)),
                new MenuOption("Dumpster", () => GiveItemToPlayer("dumpster", 1)),
                new MenuOption("Electric Plant Trimmers", () => GiveItemToPlayer("electrictrimmers", 1)),
                new MenuOption("Energy Drink", () => GiveItemToPlayer("energydrink", 1)),
                new MenuOption("Extra Long-life Soil", () => GiveItemToPlayer("extralonglifesoil", 1)),
                new MenuOption("Fertilizer", () => GiveItemToPlayer("fertilizer", 1)),
                new MenuOption("Fingerless Gloves", () => GiveItemToPlayer("fingerlessgloves", 1)),
                new MenuOption("Flannel Shirt", () => GiveItemToPlayer("flannelshirt", 1)),
                new MenuOption("Flashlight", () => GiveItemToPlayer("flashlight", 1)),
                new MenuOption("Flat Cap", () => GiveItemToPlayer("flatcap", 1)),
                new MenuOption("Flats", () => GiveItemToPlayer("flats", 1)),
                new MenuOption("Floor Lamp", () => GiveItemToPlayer("Floor Lamp", 1)),
                new MenuOption("Flu Medicine", () => GiveItemToPlayer("flumedicine", 1)),
                new MenuOption("Frying Pan", () => GiveItemToPlayer("fryingpan", 1)),
                new MenuOption("Full Spectrum Grow Light", () => GiveItemToPlayer("fullspectrumgrowlight", 1)),
                new MenuOption("Gasoline", () => GiveItemToPlayer("gasoline", 1)),
                new MenuOption("Glass (Liquid)", () => GiveItemToPlayer("liquidglass", 1)),
                new MenuOption("Gloves", () => GiveItemToPlayer("gloves", 1)),
                new MenuOption("Gold Bar", () => GiveItemToPlayer("goldbar", 1)),
                new MenuOption("Golden Skateboard", () => GiveItemToPlayer("goldenskateboard", 1)),
                new MenuOption("Grandaddy Purple Seed", () => GiveItemToPlayer("granddaddypurpleseed", 1)),
                new MenuOption("Grandaddy Purple", () => GiveItemToPlayer("granddaddypurple", 1)),
                new MenuOption("Green Crack Seed", () => GiveItemToPlayer("greencrackseed", 1)),
                new MenuOption("Green Crack", () => GiveItemToPlayer("greencrack", 1)),
                new MenuOption("Grow Tent", () => GiveItemToPlayer("growtent", 1)),
                new MenuOption("Halogen Grow Light", () => GiveItemToPlayer("halogengrowlight", 1)),
                new MenuOption("High-Quality Pseudo", () => GiveItemToPlayer("highqualitypseudo", 1)),
                new MenuOption("Horse Semen", () => GiveItemToPlayer("horsesemen", 1)),
                new MenuOption("Iodine", () => GiveItemToPlayer("iodine", 1)),
                new MenuOption("Jar", () => GiveItemToPlayer("jar", 1)),
                new MenuOption("Jeans", () => GiveItemToPlayer("jeans", 1)),
                new MenuOption("Jorts", () => GiveItemToPlayer("jorts", 1)),
                new MenuOption("Lab Oven", () => GiveItemToPlayer("laboven", 1)),
                new MenuOption("Large Storage Rack", () => GiveItemToPlayer("largestoragerack", 1)),
                new MenuOption("Laundering Station", () => GiveItemToPlayer("launderingstation", 1)),
                new MenuOption("LED Grow Light", () => GiveItemToPlayer("ledgrowlight", 1)),
                new MenuOption("Legend Sunglasses", () => GiveItemToPlayer("legendsunglasses", 1)),
                new MenuOption("Lightweight Skateboard", () => GiveItemToPlayer("lightweightskateboard", 1)),
                new MenuOption("Long Skirt", () => GiveItemToPlayer("longskirt", 1)),
                new MenuOption("Long-Life Soil", () => GiveItemToPlayer("longlifesoil", 1)),
                new MenuOption("Low-Quality Pseudo", () => GiveItemToPlayer("lowqualitypseudo", 1)),
                new MenuOption("M1911 Magazine", () => GiveItemToPlayer("m1911mag", 1)),
                new MenuOption("M1911", () => GiveItemToPlayer("m1911", 1)),
                new MenuOption("Machete", () => GiveItemToPlayer("machete", 1)),
                new MenuOption("Management Clipboard", () => GiveItemToPlayer("managementclipboard", 1)),
                new MenuOption("Medium Storage Rack", () => GiveItemToPlayer("mediumstoragerack", 1)),
                new MenuOption("Mega Bean", () => GiveItemToPlayer("megabean", 1)),
                new MenuOption("Metal Square Table", () => GiveItemToPlayer("metalsquaretable", 1)),
                new MenuOption("Meth (Liquid)", () => GiveItemToPlayer("liquidmeth", 1)),
                new MenuOption("Meth", () => GiveItemToPlayer("meth", 1)),
                new MenuOption("Mixing Station Mk2", () => GiveItemToPlayer("mixingstationmk2", 1)),
                new MenuOption("Mixing Station", () => GiveItemToPlayer("mixingstation", 1)),
                new MenuOption("Moisture-Preserving Pot", () => GiveItemToPlayer("moisturepreservingpot", 1)),
                new MenuOption("Motor Oil", () => GiveItemToPlayer("motoroil", 1)),
                new MenuOption("Mouth Wash", () => GiveItemToPlayer("mouthwash", 1)),
                new MenuOption("OG Kush Seed", () => GiveItemToPlayer("ogkushseed", 1)),
                new MenuOption("OG Kush", () => GiveItemToPlayer("ogkush", 1)),
                new MenuOption("Ol’ Man Jimmy’s", () => GiveItemToPlayer("oldmanjimmys", 1)),
                new MenuOption("Overalls", () => GiveItemToPlayer("overalls", 1)),
                new MenuOption("Packaging Station Mk2", () => GiveItemToPlayer("packagingstationmk2", 1)),
                new MenuOption("Packaging Station", () => GiveItemToPlayer("packagingstation", 1)),
                new MenuOption("Paracetamol", () => GiveItemToPlayer("paracetamol", 1)),
                new MenuOption("PGR", () => GiveItemToPlayer("pgr", 1)),
                new MenuOption("Phosphorus", () => GiveItemToPlayer("phosphorus", 1)),
                new MenuOption("Plant Trimmers", () => GiveItemToPlayer("trimmers", 1)),
                new MenuOption("Plastic Pot", () => GiveItemToPlayer("plasticpot", 1)),
                new MenuOption("Porkpie Hat", () => GiveItemToPlayer("porkpiehat", 1)),
                new MenuOption("Pot Sprinkler", () => GiveItemToPlayer("potsprinkler", 1)),
                new MenuOption("Pseudo", () => GiveItemToPlayer("pseudo", 1)),
                new MenuOption("Rectangle Frame Glasses", () => GiveItemToPlayer("rectangleframeglasses", 1)),
                new MenuOption("Revolver Cylinder", () => GiveItemToPlayer("revolvercylinder", 1)),
                new MenuOption("Revolver", () => GiveItemToPlayer("revolver", 1)),
                new MenuOption("Safe", () => GiveItemToPlayer("safe", 1)),
                new MenuOption("Sandals", () => GiveItemToPlayer("Sandals", 1)),
                new MenuOption("Saucepan", () => GiveItemToPlayer("saucepan", 1)),
                new MenuOption("Skateboard", () => GiveItemToPlayer("skateboard", 1)),
                new MenuOption("Skirt", () => GiveItemToPlayer("skirt", 1)),
                new MenuOption("Small Round Glasses", () => GiveItemToPlayer("smallroundglasses", 1)),
                new MenuOption("Small Storage Rack", () => GiveItemToPlayer("smallstoragerack", 1)),
                new MenuOption("Small Trash Can", () => GiveItemToPlayer("smalltrashcan", 1)),
                new MenuOption("Sneakers", () => GiveItemToPlayer("sneakers", 1)),
                new MenuOption("Soap", () => GiveItemToPlayer("soap", 1)),
                new MenuOption("Soil Pourer", () => GiveItemToPlayer("soilpourer", 1)),
                new MenuOption("Soil", () => GiveItemToPlayer("soil", 1)),
                new MenuOption("Sour Diesel Seed", () => GiveItemToPlayer("sourdieselseed", 1)),
                new MenuOption("Sour Diesel", () => GiveItemToPlayer("sourdiesel", 1)),
                new MenuOption("Speed Dealer Shades", () => GiveItemToPlayer("speeddealershades", 1)),
                new MenuOption("Speed Grow", () => GiveItemToPlayer("speedgrow", 1)),
                new MenuOption("Suspension Rack", () => GiveItemToPlayer("tshirt", 1)),
                new MenuOption("T-Shirt", () => GiveItemToPlayer("skirt", 1)),
                new MenuOption("Test Weed", () => GiveItemToPlayer("testweed", 1)),
                new MenuOption("Trash Bag", () => GiveItemToPlayer("trashbag", 1)),
                new MenuOption("Trash Can", () => GiveItemToPlayer("trashcan", 1)),
                new MenuOption("Trash Grabber", () => GiveItemToPlayer("trashgrabber", 1)),
                new MenuOption("TV", () => GiveItemToPlayer("TV", 1)),
                new MenuOption("V-Neck Shirt", () => GiveItemToPlayer("vneck", 1)),
                new MenuOption("Vest", () => GiveItemToPlayer("vest", 1)),
                new MenuOption("Viagor", () => GiveItemToPlayer("viagor", 1)),
                new MenuOption("Watering Can", () => GiveItemToPlayer("wateringcan", 1)),
                new MenuOption("Wooden Square Table", () => GiveItemToPlayer("woodsquaretable", 1)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Lobby Menu"] = new List<MenuElement>
            {
                new MenuOption("End Game", () => SetJumpForce(10f)),
                new MenuOption("Default Jump", () => SetJumpForce(5f)),
                new MenuTextBox("JumpForce", null, val => SetJumpForce((float)val)),
                new MenuOption("Insane Jump", SetJumpForceD, 200f),
                new MenuOption("No gravity", () => SetGravity(0)),
                new MenuOption("Low gravity", () => SetGravity(0.2f)),
                new MenuTextBox("Type MovementSpeed", "", val => SetMovementSpeed(float.TryParse(val as string, out var speed) ? speed : 0f)),
                new MenuTextBox("Type Timescale", null, val => SetWorldTimeScale((int)val)),
                new MenuOption("Rain Models", () => SetJumpForce(10f)),
                new MenuOption("Patch Teleport Barrier", () => SetJumpForce(10f)),
                new MenuOption("NewsBar", () => SetJumpForce(10f)),
                new MenuOption("Kill Npc Text", () => SetJumpForce(10f)),
                new MenuOption("Meele Distance", () => SetJumpForce(10f)),
                new MenuOption("Unlimited Jump", () => PlayerMovement.JumpMultiplier = PlayerMovement.JumpMultiplier == 1 ? 9999 : 1),
                new MenuOption("Kill Camper players", ToggleAFKKill),
                new MenuOption("Drivaeable RV", () => _afterlifeCoroutinesStart(SpawnNetWorkScheduleIObjectCoroutineX("Coupe", Player.Local.LocalGameObject.transform.position + Player.Local.LocalGameObject.transform.forward * 5f, Quaternion.identity, true, GameObject.Find("RV")))),
                new MenuOption("Schizo Vehicle 1", () => _afterlifeCoroutinesStart(SpawnNetWorkScheduleIObjectCoroutineX("SchizoGoblin", Player.Local.LocalGameObject.transform.position + Player.Local.LocalGameObject.transform.forward * 5f, Quaternion.identity, true, GameObject.Find("Coupe")))),
                new MenuOption("Schizo Vehicle 2", () => _afterlifeCoroutinesStart(SpawnNetWorkScheduleIObjectCoroutineX("Coupe", Player.Local.LocalGameObject.transform.position + Player.Local.LocalGameObject.transform.forward * 5f, Quaternion.identity, true, GameObject.Find("SchizoGoblin")))),
                new MenuOption("GodMode", () => ToggleGodMode()),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["UI Menu"] = new List<MenuElement>
            {
                new MenuTextBox("type uiName", "", (val) => ToggleSchedulIUIByName($"{val}")),
                new MenuOption("Sleep Menu UI", () => ToggleSchedulIUIByName("SleepCanvas")),
                new MenuOption("HardwareStore UI", () => ToggleSchedulIUIByName("HardwareStoreInterface")),
                new MenuOption("HardwareStore UI", () => ToggleSchedulIUIByName("HardwareStoreInterface (North Store)")),
                new MenuOption("Gas Station UI", () => ToggleSchedulIUIByName("GasStationInterface")),
                new MenuOption("Gas Station Central UI", () => ToggleSchedulIUIByName("GasStationInterface_Central")),
                new MenuOption("Weed Supplier UI", () => ToggleSchedulIUIByName("WeedSupplierInterface")),
                new MenuOption("Meth Supplier UI", () => ToggleSchedulIUIByName("MethSupplierInterface")),
                new MenuOption("Coke Supplier UI", () => ToggleSchedulIUIByName("CokeSupplierInterface")),
                new MenuOption("Barbershop UI", () => ToggleSchedulIUIByName("BarbershopUI")),
                new MenuOption("Tattoo UI", () => ToggleSchedulIUIByName("TattooUI")),
                new MenuOption("ClothingShop UI", () => ToggleSchedulIUIByName("ClothingShopInterface")),
                new MenuOption("Dark Market UI", () => ToggleSchedulIUIByName("DarkMarketInterface")),
                new MenuOption("Boutique Store UI", () => ToggleSchedulIUIByName("BoutiqueStoreInterface")),
                new MenuOption("Pawn Shop UI", () => ToggleSchedulIUIByName("SleepCanvas")),
                new MenuOption("HandOver UI", () => ToggleSchedulIUIByName("HandoverScreen")),
                new MenuOption("DiscardSlot UI", () => ToggleSchedulIUIByName("SleepCanvas")),
                new MenuOption("CreateMixInterface UI", () => ToggleSchedulIUIByName("SleepCanvas")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Teleport Menu"] = new List<MenuElement>
            {
                new MenuTextBox("Type Coord", null, val => TeleportLocalPlayer((Vector3)ConvertInput(val as string, typeof(Vector3)))),
                new MenuOption("Shred Shack", () => TeleportLocalPlayer(new Vector3(-39.460007f, -3.6750002f, 117.799995f))),
                new MenuOption("Bud's Bar", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Pill-Ville Pharmacy", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Fat Dragon Chinese", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Dan's Hardware", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Hyland Range", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Arcade", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Parkinglot", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Thompson Construction", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Motel", () => TeleportLocalPlayer(new Vector3(-66.41f, 1.69f, 82.84f))),
                new MenuOption("Brown Apartments", () => TeleportLocalPlayer(new Vector3(-169.38608f, -4f, 96.512794f))),
                new MenuOption("Motel Office", () => TeleportLocalPlayer(new Vector3(-64.28f, 0.39f, 142.12f))),
                new MenuOption("Taco Ticklers", () => TeleportLocalPlayer(new Vector3(-30.49f, 1.07f, 60.8f))),
                new MenuOption("The Piss Hut", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Pawn Shop", () => TeleportLocalPlayer(new Vector3(-61.25f, 0f, 49.25f))),
                new MenuOption("Slop Shop", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Barber Shop", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Laundromat", () => TeleportLocalPlayer(new Vector3(-22.19f, 1.07f, 25.36f))),
                new MenuOption("Thrifty Threads", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Top Dog Car Wash", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Hyland Auto", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Auto Shop", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Gas-Mart", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Mayor house", () => TeleportLocalPlayer(new Vector3(90f, 0f, 92f))),
                new MenuOption("Post Office", () => TeleportLocalPlayer(new Vector3(47.19f, 1.07f, 5.03f))),
                new MenuOption("Blueball's Boutique", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Ray's Real Estate", () => TeleportLocalPlayer(new Vector3(81.4f, 0f, -15.1f))),
                new MenuOption("Handy Hawk's Hardware", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Hyland Medical", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Pizzeria", () => TeleportLocalPlayer(new Vector3(-27.85f, -4f, 145.35f))),
                new MenuOption("Supermarket", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Police Station", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Town Hall", () => TeleportLocalPlayer(new Vector3(58.85f, 1.25f, 31.00003f))),
                new MenuOption("Church", () => TeleportLocalPlayer(new Vector3(139.79f, 0.17f, 44.74f))),
                new MenuOption("Butterbox Cafe and Bakery", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("The Crimson Canary", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Casino", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Basketball Court", () => TeleportLocalPlayer(new Vector3(0f,0f,0f))),
                new MenuOption("Tattoo Parlour", () => TeleportLocalPlayer(new Vector3(-134.604f, -4f, 69.38f))),
                new MenuOption("Bungalow", () => TeleportLocalPlayer(new Vector3(-168.13f, -2.74f, 113.64f))),
                new MenuOption("Docks Warehouse", () => TeleportLocalPlayer(new Vector3(-76.21f, -1.46f, -60.63f))),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Avatar Menu"] = new List<MenuElement>
            {
                new MenuTextBox("Gender", "", (val) => SetAppearanceProperty("skincolor", $"{val}")),
                new MenuTextBox("Weight", "", (val) => SetAppearanceProperty("weight", $"{val}")),
                new MenuTextBox("Skin Color", "", (val) => SetAppearanceProperty("skincolor", $"{val}")),
                new MenuTextBox("Hair Style Path", "", (val) => SetAppearanceProperty("hairstyle", $"{val}")),// example: Avatar/Hair/Spiky/Spiky
                new MenuTextBox("Hair color", "", (val) => SetAppearanceProperty("haircolor", $"{val}")),
                new MenuTextBox("Mouth", "", (val) => SetAppearanceProperty("mouth", $"{val}")),
                new MenuTextBox("Eyeball color", "", (val) => SetAppearanceProperty("eyeballcolor", $"{val}")),
                new MenuTextBox("Eyewear color", "", (val) => SetAppearanceProperty("eyewearcolor", $"{val}")),
                new MenuTextBox("Top color", "", (val) => SetAppearanceProperty("topcolor", $"{val}")),
                new MenuTextBox("Bottom color", "", (val) => SetAppearanceProperty("bottomcolor", $"{val}")),
                new MenuTextBox("Shoes color", "", (val) => SetAppearanceProperty("shoescolor", $"{val}")),
                new MenuTextBox("Headwear color", "", (val) => SetAppearanceProperty("headwearcolor", $"{val}")),
                new MenuTextBox("Tattoos", "", (val) => SetAppearanceProperty("tattoos", $"{val}")),
                new MenuOption("Community Presets", () => CreateSubMenu(menuName, 22)),
                new MenuOption("Personal Presets", () => CreateSubMenu(menuName, 22)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Gamemodes Menu"] = new List<MenuElement>
            {
                new MenuOption("Zombies Mode", () => SetJumpForce(30f)),
                new MenuOption("Hide & Seek Mode", () => SetJumpForce(30f)),
                new MenuOption("Don't look down!", () => SetJumpForce(30f)),
                new MenuOption("Slenderman", () => SetJumpForce(30f)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Clone Menu"] = new List<MenuElement>
            {
                new MenuOption("Clone self", () => SpawnScheduleINpc("Player_Local")),
                new MenuOption("Destroy Clone", () => SetJumpForce(30f)),
                new MenuOption("Move Clone to Hairs", () => SetJumpForce(30f)),
                new MenuOption("Play Clone Animation", () => SetJumpForce(30f)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Message Menu"] = new List<MenuElement>
            {
                new MenuOption("Hello", () => _afterlifeConsole("Hello")),
                new MenuOption("I Slap Ass", () => _afterlifeConsole("I slap cheeks daily")),
                new MenuOption("I eat Ass", () => _afterlifeConsole("Buffet open 24/7")),
                new MenuOption("Got that weed", () => _afterlifeConsole("Only the loudest 🔥")),
                new MenuOption("420 hoe", () => _afterlifeConsole("Stay blazed, stay based")),
                new MenuOption("Where the plug at?", () => _afterlifeConsole("Need that 🔌 ASAP")),
                new MenuOption("Gimmie ur wallet fool", () => _afterlifeConsole("Empty them pockets 💸")),
                new MenuOption("I fuck hoes", () => _afterlifeConsole("Certified pipe layer")),
                new MenuOption("Drop yo pockets fool", () => _afterlifeConsole("Run them coins")),
                new MenuOption("m1911 to ur head", () => _afterlifeConsole("Click clack, it’s wrap time")),
                new MenuOption("Put ur hands up", () => _afterlifeConsole("This a stick-up")),
                new MenuOption("You want some meth", () => _afterlifeConsole("Breaking Bad season 9")),
                new MenuOption("Overdose alert", () => _afterlifeConsole("Narcan not included 💉")),
                new MenuOption("I'm built different", () => _afterlifeConsole("Stats maxed out 🔥")),
                new MenuOption("Crackhead energy", () => _afterlifeConsole("Vibrating at 9000hz")),
                new MenuOption("Certified hood classic", () => _afterlifeConsole("You know the vibes")),
                new MenuOption("Slide into the DMs", () => _afterlifeConsole("Smooth criminal 🕺")),
                new MenuOption("U got games on yo phone?", () => _afterlifeConsole("Give me that now 📱")),
                new MenuOption("Chug jug time", () => _afterlifeConsole("Full send, gamer")),
                new MenuOption("🧌 Gremlin Mode", () => _afterlifeConsole("Climbing walls and eating drywall")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Weapon Mods"] = new List<MenuElement>
            {
                //M1911,Machete,Frying Pan,Baseball Bat, Revolver
                new MenuOption("Change Projectile", () => SetJumpForce(30f)),
                new MenuOption("Give M1911", () => GiveItemToPlayer("m1911", 1)),
                new MenuOption("Give Machete", () => GiveItemToPlayer("machete", 1)),
                new MenuOption("Give Frying Pan", () => GiveItemToPlayer("fryingpan", 1)), 
                new MenuOption("Give Baseball bat", () => GiveItemToPlayer("baseballbat", 1)),
                new MenuOption("Give Revolver", () => GiveItemToPlayer("revolver", 1)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Power Ups"] = new List<MenuElement>
            {
                new MenuOption("Super Speed 1mins", () => _afterlifeCoroutinesStart(GiveSetMovementSpeedTimeSpecified(60f))),
                new MenuOption("Super Jump 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Slowmode 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Fastmode 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Godmode 1mins", () => _afterlifeCoroutinesStart(GiveGodModeTimeSpecified(60f))),
                new MenuOption("Flymode 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Demi God 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Free items 1mins", () => _afterlifeCoroutinesStart(GiveSuperJumpTimeSpecified(60f))),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Perks"] = new List<MenuElement>//remake vending machines possibly?
            {
                new MenuOption("Faster movement cuke", () => GiveItemToPlayer("cuke", 1)),
                new MenuOption("Higher jump cuke", () => GiveItemToPlayer("cuke", 1)),
                new MenuOption("Rum and Cuke", () => GiveItemToPlayer("cuke", 1)),
                new MenuOption("Your a ghost cuke", () => GiveItemToPlayer("cuke", 1)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Forge Menu"] = new List<MenuElement>
            {
                new MenuOption("Skybase Bungalow", () => SkybaseHouseSpawner("Bungalow")),
                new MenuOption("Skybase Manor", () => SkybaseHouseSpawner("Manor")),
                new MenuOption("Skybase Other 1", () => SkybaseHouseSpawner("Bungalow")),
                new MenuOption("Skybase Other 2", () => SkybaseHouseSpawner("Bungalow")),
                new MenuOption("Forge Mode Toggle", () => forgeModeBool = !forgeModeBool),
                new MenuOption("Spawn Cash", () => CashDrop()),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Vision Menu"] = new List<MenuElement>
            {
                new MenuOption("Fog menu", () =>  CreateSubMenu("Fog menu", 58)),
                new MenuOption("Sky Colors Menu", val => CreateSubMenu("Sky Colors Menu", 26)),
                new MenuOption("Disco Skymode", val => ToggleDiscoSkyMode()),
                new MenuOption("meth head vision", () => SetCameraMod("meth head")),
                new MenuOption("real time strat vision", () => SetCameraMod("rts")),
                new MenuOption("wall hack vision", () => SetCameraMod("wallhack")),
                new MenuOption("Old times vision", () => ToggleGreyscale(-60)),
                new MenuOption("dreamscape vision", () => SetCameraMod("dreamscape")),
                new MenuOption("toggle blur vision", () => ToggleBlurscale(20)),
                new MenuOption("alien vision", () => SetCameraMod("alien")),
                new MenuOption("infrared vision", () => SetCameraMod("infrared")),
                new MenuOption("reset visions", () => SetCameraMod("reset")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Sky Colors Menu"] = new List<MenuElement>
            {
                new MenuOption("reset visions", () => SetCameraMod("reset")),
                new MenuOption("black sky", () => SetCameraMod("#000000")),
                new MenuOption("white sky", () => SetCameraMod("#FFFFFF")),
                new MenuOption("gray sky", () => SetCameraMod("#808080")),
                new MenuOption("light gray sky", () => SetCameraMod("#D3D3D3")),
                new MenuOption("dark gray sky", () => SetCameraMod("#404040")),
                new MenuOption("red sky", () => SetCameraMod("#FF0000")),
                new MenuOption("green sky", () => SetCameraMod("#00FF00")),
                new MenuOption("blue sky", () => SetCameraMod("#0000FF")),
                new MenuOption("pink sky", () => SetCameraMod("#FFC0CB")),
                new MenuOption("purple sky", () => SetCameraMod("#800080")),
                new MenuOption("orange sky", () => SetCameraMod("#FFA500")),
                new MenuOption("yellow sky", () => SetCameraMod("#FFFF00")),
                new MenuOption("cyan sky", () => SetCameraMod("#00FFFF")),
                new MenuOption("magenta sky", () => SetCameraMod("#FF00FF")),
                new MenuOption("lime sky", () => SetCameraMod("#32CD32")),
                new MenuOption("teal sky", () => SetCameraMod("#008080")),
                new MenuOption("navy sky", () => SetCameraMod("#000080")),
                new MenuOption("maroon sky", () => SetCameraMod("#800000")),
                new MenuOption("gold sky", () => SetCameraMod("#FFD700")),
                new MenuOption("sky blue", () => SetCameraMod("#87CEEB")),
                new MenuOption("sunset orange", () => SetCameraMod("#FF4500")),
                new MenuOption("neon cyan", () => SetCameraMod("#00FFFF")),
                new MenuOption("deep violet", () => SetCameraMod("#9400D3")),
                new MenuOption("hot magenta", () => SetCameraMod("#FF00FF")),
                new MenuOption("Back", () => CreateSubMenu("Vision Menu", 13))
            },
            ["Fog menu"] = new List<MenuElement>
            {
                new MenuTextBox("Type Fog Color (RGB)", "", val => SetFogColor(new Color(float.Parse(val.ToString().Split(',')[0]) / 255f, float.Parse(val.ToString().Split(',')[1]) / 255f, float.Parse(val.ToString().Split(',')[2]) / 255f))),
                new MenuOption("Toggle Fog On/Off", () => ToggleFog()),
                new MenuOption("Increase Fog Density", () => ChangeFogDensity(0.05f)),
                new MenuOption("Decrease Fog Density", () => ChangeFogDensity(-0.05f)),
                new MenuOption("test sky", () => SetSkyBoxUrl("https://iili.io/3aSHt19.png")),
                // Basic Colors
                new MenuOption("Set Fog Color to Black", () => SetFogColor(new Color(0f, 0f, 0f))),
                new MenuOption("Set Fog Color to White", () => SetFogColor(new Color(0.2f, 0.2f, 0.2f))), // Could be full white if desired
                new MenuOption("Set Fog Color to Red", () => SetFogColor(new Color(0.2f, 0f, 0f))),
                new MenuOption("Set Fog Color to Blue", () => SetFogColor(new Color(0f, 0f, 0.2f))),
                new MenuOption("Set Fog Color to Green", () => SetFogColor(new Color(0f, 0.2f, 0f))),
                new MenuOption("Set Fog Color to Gray", () => SetFogColor(new Color(0.8f, 0.8f, 0.8f))),
                // Cool Tones
                new MenuOption("Set Fog Color to Cyan", () => SetFogColor(new Color(0f, 0.2f, 0.2f))),
                new MenuOption("Set Fog Color to Aqua", () => SetFogColor(new Color(0f, 0.2f, 0.2f))),
                new MenuOption("Set Fog Color to SlateBlue", () => SetFogColor(new Color(0.3f, 0.2f, 0.5f))),
                new MenuOption("Set Fog Color to RoyalBlue", () => SetFogColor(new Color(65f/255f, 105f/255f, 225f/255f))),
                new MenuOption("Set Fog Color to CornflowerBlue", () => SetFogColor(new Color(100f/255f, 149f/255f, 237f/255f))),
                new MenuOption("Set Fog Color to LightSeaGreen", () => SetFogColor(new Color(32f/255f, 178f/255f, 170f/255f))),
                new MenuOption("Set Fog Color to SteelBlue", () => SetFogColor(new Color(70f/255f, 130f/255f, 180f/255f))),
                new MenuOption("Set Fog Color to MediumSeaGreen", () => SetFogColor(new Color(60f/255f, 179f/255f, 113f/255f))),
                new MenuOption("Set Fog Color to ForestGreen", () => SetFogColor(new Color(34f/255f, 139f/255f, 34f/255f))),
                new MenuOption("Set Fog Color to LawnGreen", () => SetFogColor(new Color(124f/255f, 252f/255f, 0f))),
                new MenuOption("Set Fog Color to SpringGreen", () => SetFogColor(new Color(0f, 1f, 127f/255f))),
                // Warm Tones
                new MenuOption("Set Fog Color to Orange", () => SetFogColor(new Color(0.5f, 0.2f, 0f))),
                new MenuOption("Set Fog Color to DarkOrange", () => SetFogColor(new Color(1f, 140f/255f, 0f))),
                new MenuOption("Set Fog Color to Tomato", () => SetFogColor(new Color(255f/255f, 99f/255f, 71f/255f))),
                new MenuOption("Set Fog Color to Coral", () => SetFogColor(new Color(255f/255f, 127f/255f, 80f/255f))),
                new MenuOption("Set Fog Color to SandyBrown", () => SetFogColor(new Color(244f/255f, 164f/255f, 96f/255f))),
                new MenuOption("Set Fog Color to Gold", () => SetFogColor(new Color(255f/255f, 215f/255f, 0f))),
                new MenuOption("Set Fog Color to Goldenrod", () => SetFogColor(new Color(218f/255f, 165f/255f, 32f/255f))),
                new MenuOption("Set Fog Color to DarkGoldenrod", () => SetFogColor(new Color(184f/255f, 134f/255f, 11f/255f))),
                // Earthy Tones
                new MenuOption("Set Fog Color to Brown", () => SetFogColor(new Color(0.5f, 0.3f, 0.1f))),
                new MenuOption("Set Fog Color to Khaki", () => SetFogColor(new Color(240f/255f, 230f/255f, 140f/255f))),
                new MenuOption("Set Fog Color to DarkKhaki", () => SetFogColor(new Color(189f/255f, 183f/255f, 107f/255f))),
                new MenuOption("Set Fog Color to Olive", () => SetFogColor(new Color(128f/255f, 128f/255f, 0f))),
                new MenuOption("Set Fog Color to DarkOliveGreen", () => SetFogColor(new Color(85f/255f, 107f/255f, 47f/255f))),
                // Pinks & Purples
                new MenuOption("Set Fog Color to Pink", () => SetFogColor(new Color(0.5f, 0.2f, 0.3f))),
                new MenuOption("Set Fog Color to HotPink", () => SetFogColor(new Color(255f/255f, 105f/255f, 180f/255f))),
                new MenuOption("Set Fog Color to DeepPink", () => SetFogColor(new Color(255f/255f, 20f/255f, 147f/255f))),
                new MenuOption("Set Fog Color to Magenta", () => SetFogColor(new Color(0.2f, 0f, 0.2f))),
                new MenuOption("Set Fog Color to Purple", () => SetFogColor(new Color(0.2f, 0f, 0.2f))),
                new MenuOption("Set Fog Color to Indigo", () => SetFogColor(new Color(75f/255f, 0f, 130f/255f))),
                new MenuOption("Set Fog Color to Violet", () => SetFogColor(new Color(238f/255f, 130f/255f, 238f/255f))),
                new MenuOption("Set Fog Color to MediumOrchid", () => SetFogColor(new Color(186f/255f, 85f/255f, 211f/255f))),
                new MenuOption("Set Fog Color to MediumPurple", () => SetFogColor(new Color(147f/255f, 112f/255f, 219f/255f))),
                new MenuOption("Set Fog Color to DarkViolet", () => SetFogColor(new Color(148f/255f, 0f, 211f/255f))),
                // Light/Pastel Colors
                new MenuOption("Set Fog Color to Lavender", () => SetFogColor(new Color(230f/255f, 230f/255f, 250f/255f))),
                new MenuOption("Set Fog Color to LavenderBlush", () => SetFogColor(new Color(255f/255f, 240f/255f, 245f/255f))),
                new MenuOption("Set Fog Color to MistyRose", () => SetFogColor(new Color(255f/255f, 228f/255f, 225f/255f))),
                new MenuOption("Set Fog Color to Thistle", () => SetFogColor(new Color(216f/255f, 191f/255f, 216f/255f))),
                new MenuOption("Set Fog Color to Periwinkle", () => SetFogColor(new Color(204f/255f, 204f/255f, 255f/255f))),
                new MenuOption("Set Fog Color to PeachPuff", () => SetFogColor(new Color(255f/255f, 218f/255f, 185f/255f))),
                new MenuOption("Set Fog Color to LightCoral", () => SetFogColor(new Color(240f/255f, 128f/255f, 128f/255f))),
                // Dark Colors
                new MenuOption("Set Fog Color to DarkRed", () => SetFogColor(new Color(139f/255f, 0f, 0f))),
                new MenuOption("Set Fog Color to MidnightBlue", () => SetFogColor(new Color(25f/255f, 25f/255f, 112f/255f))),
                new MenuOption("Set Fog Color to Firebrick", () => SetFogColor(new Color(178f/255f, 34f/255f, 34f/255f))),
                new MenuOption("Set Fog Color to SlateGray", () => SetFogColor(new Color(112f/255f, 128f/255f, 144f/255f))),
                new MenuOption("Set Fog Color to DarkSlateGray", () => SetFogColor(new Color(47f/255f, 79f/255f, 79f/255f))),
                new MenuOption("Back", () => CreateSubMenu("Vision Menu", 13))
            },
            ["Sounds Menu"] = new List<MenuElement>
            {
                // Example: of how you would do a audio download for a user.
                //new MenuOption("Devlish Trio - Baker phonk", () => MelonCoroutines.Start(PlayAudio("https://www.dropbox.com/scl/fi/q5ndb92vsij3kb5oqz92o/baker-phonk.mp3?rlkey=de4r3b74m8e9tlz9lpek3iy3g&st=h45djh9r&dl=1"))),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Menu Editor"] = new List<MenuElement>
            {
                new MenuTextBox("type CustomBg url", "", (val) => LoadMenuConfigDesign($"{val}")),
                new MenuOption("Upload designs from config", () => CreateSubMenu("Scrollbar Menu", null)),
                new MenuOption("Community Designs", () => CreateSubMenu("Scrollbar Menu", null)),
                new MenuOption("Scroller Menu", val => CreateSubMenu("Scrollbar Menu", 51)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            },
            ["Community Designs"] = new List<MenuElement>
            {
                new MenuOption("Back", () => CreateSubMenu(menuName, 5))
            },
            ["Scrollbar Menu"] = new List<MenuElement>
            {
                new MenuOption("Red", () => LoadMenuConfigDesignWithScroller("0.1,0,0,1")),
                new MenuOption("Green", () => LoadMenuConfigDesignWithScroller("0,0.1,0,1")),
                new MenuOption("Blue", () => LoadMenuConfigDesignWithScroller("0,0,0.1,1")),
                new MenuOption("White", () => LoadMenuConfigDesignWithScroller("0.1,0.1,0.1,1")),
                new MenuOption("Black", () => LoadMenuConfigDesignWithScroller("0,0,0,1")),
                new MenuOption("Gray", () => LoadMenuConfigDesignWithScroller("0.5,0.5,0.5,1")),
                new MenuOption("Cyan", () => LoadMenuConfigDesignWithScroller("0,0.1,0.1,1")),
                new MenuOption("Magenta", () => LoadMenuConfigDesignWithScroller("0.1,0,0.1,1")),
                new MenuOption("Yellow", () => LoadMenuConfigDesignWithScroller("1,0.92,0.016,1")),
                new MenuOption("Orange", () => LoadMenuConfigDesignWithScroller("1,0.5,0,1")),
                new MenuOption("Purple", () => LoadMenuConfigDesignWithScroller("0.5,0,0.5,1")),
                new MenuOption("Brown", () => LoadMenuConfigDesignWithScroller("0.6,0.3,0.1,1")),
                new MenuOption("Lime", () => LoadMenuConfigDesignWithScroller("0.75,1,0,1")),
                new MenuOption("Pink", () => LoadMenuConfigDesignWithScroller("1,0.41,0.71,1")),
                new MenuOption("Teal", () => LoadMenuConfigDesignWithScroller("0,0.5,0.5,1")),
                new MenuOption("Navy", () => LoadMenuConfigDesignWithScroller("0,0,0.5,1")),
                new MenuOption("Sky Blue", () => LoadMenuConfigDesignWithScroller("0.53,0.81,0.92,1")),
                new MenuOption("Turquoise", () => LoadMenuConfigDesignWithScroller("0.25,0.88,0.82,1")),
                new MenuOption("Gold", () => LoadMenuConfigDesignWithScroller("1,0.84,0,1")),
                new MenuOption("Silver", () => LoadMenuConfigDesignWithScroller("0.75,0.75,0.75,1")),
                new MenuOption("Coral", () => LoadMenuConfigDesignWithScroller("1,0.5,0.31,1")),
                new MenuOption("Beige", () => LoadMenuConfigDesignWithScroller("0.96,0.96,0.86,1")),
                new MenuOption("Mint", () => LoadMenuConfigDesignWithScroller("0.74,0.99,0.79,1")),
                new MenuOption("Lavender", () => LoadMenuConfigDesignWithScroller("0.9,0.9,0.98,1")),
                new MenuOption("Crimson", () => LoadMenuConfigDesignWithScroller("0.86,0.08,0.24,1")),
                new MenuOption("Indigo", () => LoadMenuConfigDesignWithScroller("0.29,0,0.51,1")),
                new MenuOption("Maroon", () => LoadMenuConfigDesignWithScroller("0.5,0,0,1")),
                new MenuOption("Olive", () => LoadMenuConfigDesignWithScroller("0.5,0.5,0,1")),
                new MenuOption("Chartreuse", () => LoadMenuConfigDesignWithScroller("0.5,1,0,1")),
                new MenuOption("Aquamarine", () => LoadMenuConfigDesignWithScroller("0.5,1,0.83,1")),
                new MenuOption("Khaki", () => LoadMenuConfigDesignWithScroller("0.76,0.69,0.57,1")),
                new MenuOption("Plum", () => LoadMenuConfigDesignWithScroller("0.87,0.63,0.87,1")),
                new MenuOption("Salmon", () => LoadMenuConfigDesignWithScroller("0.98,0.5,0.45,1")),
                new MenuOption("Periwinkle", () => LoadMenuConfigDesignWithScroller("0.8,0.8,1,1")),
                new MenuOption("Slate Gray", () => LoadMenuConfigDesignWithScroller("0.44,0.5,0.56,1")),
                new MenuOption("Sea Green", () => LoadMenuConfigDesignWithScroller("0.18,0.55,0.34,1")),
                new MenuOption("Tomato", () => LoadMenuConfigDesignWithScroller("1,0.39,0.28,1")),
                new MenuOption("Wheat", () => LoadMenuConfigDesignWithScroller("0.96,0.87,0.7,1")),
                new MenuOption("Azure", () => LoadMenuConfigDesignWithScroller("0.94,1,1,1")),
                new MenuOption("Ivory", () => LoadMenuConfigDesignWithScroller("1,1,0.94,1")),
                new MenuOption("Peach", () => LoadMenuConfigDesignWithScroller("1,0.85,0.73,1")),
                new MenuOption("Mauve", () => LoadMenuConfigDesignWithScroller("0.88,0.69,1,1")),
                new MenuOption("Tan", () => LoadMenuConfigDesignWithScroller("0.82,0.71,0.55,1")),
                new MenuOption("Dusty Rose", () => LoadMenuConfigDesignWithScroller("0.76,0.6,0.6,1")),
                new MenuOption("Forest Green", () => LoadMenuConfigDesignWithScroller("0.13,0.55,0.13,1")),
                new MenuOption("Royal Blue", () => LoadMenuConfigDesignWithScroller("0.25,0.41,0.88,1")),
                new MenuOption("Steel Blue", () => LoadMenuConfigDesignWithScroller("0.27,0.51,0.71,1")),
                new MenuOption("Hot Pink", () => LoadMenuConfigDesignWithScroller("1,0.41,0.71,1")),
                new MenuOption("Midnight Blue", () => LoadMenuConfigDesignWithScroller("0.1,0.1,0.44,1")),
                new MenuOption("Lemon", () => LoadMenuConfigDesignWithScroller("1,1,0.3,1")),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22)),
            },
            ["Loaded Prefabs"] = new List<MenuElement>
            {
                new MenuOption("Back", () => CreateSubMenu(menuName, 22)),
                new MenuTextBox("type AssetName Prefab", "", (val) => InstantiateByFullAssetNameAtLookOrMouse($"assets/assetbundlepacks/{val}/source/{val}.prefab")),
            },
            ["Profile Menu"] = new List<MenuElement>
            {
                new MenuOption("Change Rank", () => SetJumpForce(30f)),
                new MenuOption("Give XP", () => SetJumpForce(30f)),
                new MenuOption("Back", () => CreateSubMenu(menuName, 22))
            }
        };
    }
}
